# version: "3"
# services: 
#   mongodb: 
#     container_name: mongo
#     image: mongo
#     volumes: 
#       - ./db_data/:/data/db/
#     ports: 
#       - 27017:27017
#     # environment: 
#       - MONGO_INITDB_ROOT_USERNAME: "testAdmin"
#       - MONGO_INITDB_ROOT_PASSWORD: "pepe2020!"
#     #   MONGODB_USERNAME: "test1"
#     #   MONGODB_PASSWORD: "pepe2020!"
#     #   MONGODB_DATABASE: "test1db"
#     #   MONGO_INITDB_DATABASE: saas
#     #   MONGO_NON_ROOT_USERNAME: saas
#     #   MONGO_NON_ROOT_PASSWORD: secret
#     environment:
#   #      - MONGODB_INITSCRIPTS_DIR: /docker-entrypoint-initdb.d
#           # MONGODB_USERNAME: "testAdmin"
#           # MONGODB_PASSWORD: "pepe2020!"
#           # MONGODB_DATABASE: "test1db"
#           # MONGODB_ADVERTISED_HOSTNAME: localhost
#           # MONGODB_PORT_NUMBER: 27017
#           # MONGODB_CLIENT_EXTRA_FLAGS: --authenticationDatabase=test1db
#     restart: always
# # mongo-express:
# #   image: mongo-express
# #   ports:
# #     - 8081:8081
# #   restart: always
version: "3.1"
services:
  mongo:
    container_name: mongo
    image: mongo
    restart: always
    # environment:
      # MONGO_INITDB_ROOT_USERNAME: root
      # MONGO_INITDB_ROOT_PASSWORD: example
    networks:
      - nodeapp-network

  # mongo-express:
  #   image: mongo-express
  #   restart: always
  #   ports:
  #     - 8081:8081
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: root
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: example

  node:
    container_name: nodeapp
    image: nodeapp
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    networks:
      - nodeapp-network
    depends_on: 
      - mongo
    networks:
      - nodeapp-network

networks:
  nodeapp-network:
    driver: bridge
  dario-network:
    driver: bridge
